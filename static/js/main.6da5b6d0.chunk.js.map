{"version":3,"sources":["assets/images/background.jpg","models/theme.ts","models/app.ts","models/post.ts","models/index.ts","containers/NavbarList/_components/NavbarList.tsx","containers/NavbarList/_components/NavbarListItem.tsx","containers/NavbarList/index.tsx","components/BlurRoot.tsx","layouts/Navbar.tsx","layouts/themes/Main.ts","layouts/themes/Content.ts","layouts/index.tsx","components/animations.tsx","pages/home/_components/index.tsx","pages/home/index.tsx","pages/about/index.tsx","pages/posts/_components/PostList.tsx","pages/posts/_components/PostListItem.tsx","components/LineClamp.tsx","pages/posts/_components/index.tsx","pages/posts/index.tsx","routes/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ThemeModes","LayoutModes","AppStore","version","observable","ThemeStore","Light","Recipe","PostStore","this","posts","length","fetching","fetch","res","json","data","map","item","attrs","attributes","title","summary","description","createDate","Date","getTime","updateDate","author","action","appStore","themeStore","postStore","appState","storesContext","React","createContext","app","theme","post","useStores","useContext","flexDirection","House","NavbarList","styled","ul","padding","NavbarListItemRoot","li","props","active","NavbarListItem","children","onClick","NavbarListContainer","location","useLocation","history","useHistory","routes","key","path","pathname","push","meta","label","BlurRoot","css","ImageBackground","height","width","Wrapper","header","Navbar","display","flexGrow","Main","main","MainTheme","Content","div","ContentTheme","observer","mode","layout","fadeIn","config","duration","Hint","Title","h1","Message","p","useLayoutEffect","Typed","strings","typeSpeed","fadeOut","id","AboutPage","PostList","lines","PostTitle","PostMeta","h2","PostMetaItem","span","PostSummary","PostListItem","PostPortal","Loading","ReactLoading","PostPageRoot","fmtDate","useCallback","date","dayjs","format","useEffect","fetchPosts","type","createBrowserHistory","exact","render","AppRoutes","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6da5b6d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.59f72571.jpg\";","import {\n  observable\n} from 'mobx'\n\nexport enum ThemeModes {\n  Light,\n  Dark,\n  HighContrast\n}\n\nexport enum LayoutModes {\n  House,\n  Recipe\n}\n\nexport interface IThemeStore {\n  mode: ThemeModes,\n  layout: LayoutModes\n}\n\nexport class ThemeStore implements IThemeStore {\n  @observable mode = ThemeModes.Light\n  @observable layout = LayoutModes.Recipe\n}","import {\n  observable\n} from 'mobx'\n\nexport interface IAppStore {\n  version: string\n}\n\nexport class AppStore implements IAppStore {\n  readonly version: string = '0.0.0'\n  \n  @observable versionName: string = 'November Rain'\n}","import {\n  observable,\n  action\n} from 'mobx'\n\nexport interface IPostStore {\n  posts: IPost[]\n  fetching: boolean\n}\n\nexport interface IPost {\n  title: string\n  summary: string\n  createDate: number\n  updateDate: number\n  author: string\n}\n\nexport class PostStore implements IPostStore {\n  @observable posts: IPost[] = []\n  @observable fetching = false\n\n  @action\n  async fetchPosts() {\n\n    if (this.posts.length) {\n      return\n    }\n\n    this.fetching = true\n    \n    const res = await fetch('https://service-rzwlbsaq-1253264948.gz.apigw.tencentcs.com/release/posts')\n    const { data }: IReponse<any[]> = await res.json() as any\n    \n    this.posts = data.map(item => {\n      const attrs = item.attributes\n\n      return {\n        title: attrs.title,\n        summary: attrs.description,\n        createDate: new Date().getTime(),\n        updateDate: new Date().getTime(),\n        author: 'Samuel'\n      }\n    })\n    \n    this.fetching = false\n  }\n}","import React from 'react'\nimport { AppStore } from './app'\nimport { ThemeStore } from './theme'\nimport { PostStore } from './post'\n\nexport const appStore = new AppStore()\nexport const themeStore = new ThemeStore()\nexport const postStore = new PostStore()\n\nexport const appState = {\n  appStore,\n  themeStore,\n  postStore\n}\n\nexport const storesContext = React.createContext({\n  app: appStore,\n  theme: themeStore,\n  post: postStore\n})\n\nexport function useStores() {\n  return React.useContext(storesContext)\n}","import styled from 'styled-components'\nimport theme from 'styled-theming'\nimport { LayoutModes } from '../../../models/theme'\n\nconst flexDirection = theme('mode', {\n  [LayoutModes.House]: 'row',\n  [LayoutModes.Recipe]: 'column'\n})\n\nexport const NavbarList = styled.ul`\n  float: right;\n  display: flex;\n  flex-direction: ${flexDirection};\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding-right: 140px;\n`","import React from 'react'\nimport styled from 'styled-components'\nimport theme from 'styled-theming'\nimport { LayoutModes } from '../../../models/theme'\n\ninterface INavbarListItemRootProps {\n  active: boolean | undefined,\n  onClick: React.EventHandler<any>\n}\n\nconst padding = theme('mode', {\n  [LayoutModes.House]: '0 20px',\n  [LayoutModes.Recipe]: '20px 0'\n})\n\nexport const NavbarListItemRoot = styled.li`\n  display: flex;\n  align-items: center;\n  color: ${(props: INavbarListItemRootProps) => props.active ? '#fff' : '#999'};\n  font-family: Merriweather;\n  font-size: 24px;\n  font-weight: bold;\n  padding: ${padding};\n  cursor: pointer;\n  transform-origin: center;\n  transition: all 300ms;\n\n  span {\n    position: relative;\n    display: inline-block;\n    border-bottom: 2px solid #fff;\n    border-width: 0;\n  }\n\n  &:hover {\n    transform: scale(1.1, 1.1);\n    \n    span::after {\n      content: '';\n      position: absolute;\n      left: 0;\n      bottom: -2px;\n      display: block;\n      height: 2px;\n      width: 100%;\n      background-color: #fff;\n      transform-origin: center;\n      animation: spread 300ms;\n    }\n  }\n\n  @keyframes spread {\n    from {\n      transform: scale(0, 1);\n    }\n\n    to {\n      transform: scale(1, 1);\n    }\n  }\n`\n\nexport interface INavbarListItemProps extends INavbarListItemRootProps {\n  children: string\n}\n\nexport function NavbarListItem({ children, active, onClick }: INavbarListItemProps) {\n  return (\n    <NavbarListItemRoot active={active} onClick={onClick}>\n      <span>{ children }</span>\n    </NavbarListItemRoot>\n  )\n}","import React from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { routes } from '../../routes'\nimport {\n  NavbarList,\n  NavbarListItem\n} from './_components'\n\nexport default NavbarListContainer\n\nfunction NavbarListContainer() {\n  const location = useLocation()\n  const history = useHistory()\n\n  function handleNavbarListItemClick(path: string) {\n    history.push(path)\n  }\n\n  return (\n    <NavbarList>\n      {routes.map(item => (\n        <NavbarListItem\n          key={item.path}\n          active={location.pathname === item.path}\n          onClick={() => handleNavbarListItemClick(item.path)}\n        >\n          { item.meta.label }\n        </NavbarListItem>\n      ))}\n    </NavbarList>\n  )\n}","import { css } from 'styled-components'\nimport ImageBackground from '../assets/images/background.jpg'\n\nexport const BlurRoot = css`\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    filter: blur(20px);\n    z-index: -1;\n    margin: -10px;\n    background: url(${ImageBackground}) 0 / cover fixed;\n  }\n`","import React from 'react'\nimport styled from 'styled-components'\nimport theme from 'styled-theming'\nimport NavbarList from '../containers/NavbarList'\nimport { LayoutModes } from '../models/theme'\nimport { BlurRoot } from '../components/BlurRoot'\n\nconst height = theme('mode', {\n  [LayoutModes.House]: '100px',\n  [LayoutModes.Recipe]: '100%'\n})\nconst width = theme('mode', {\n  [LayoutModes.House]: '100%',\n  [LayoutModes.Recipe]: '400px'\n})\n\nconst Wrapper = styled.header`\n  position: relative;\n  height: ${height};\n  width: ${width};\n  background-color: rgba(0,0,0,.2);\n  transition: all 300ms;\n\n  ${BlurRoot}\n`\n\nexport default Navbar\n\nfunction Navbar() {\n\n  return (\n    <Wrapper>\n      <NavbarList />\n    </Wrapper>\n  )\n}","import theme from 'styled-theming'\nimport { LayoutModes } from '../../models/theme'\n\nexport const display = theme('mode', {\n  [LayoutModes.House]: 'block',\n  [LayoutModes.Recipe]: 'flex'\n})","import theme from 'styled-theming'\nimport { LayoutModes } from '../../models/theme'\n\nexport const height = theme('mode', {\n  [LayoutModes.House]: 'calc(100% - 100px)',\n  [LayoutModes.Recipe]: '100%'\n})\n\nexport const width = theme('mode', {\n  [LayoutModes.House]: '100%',\n  [LayoutModes.Recipe]: 'calc(100% - 400px)'\n})\n\nexport const flexGrow = theme('mode', {\n  [LayoutModes.House]: '0',\n  [LayoutModes.Recipe]: '1'\n})","import React from 'react'\nimport { observer } from 'mobx-react'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { useStores } from '../models'\nimport Navbar from './Navbar'\nimport * as MainTheme from './themes/Main'\nimport * as ContentTheme from './themes/Content'\n\nconst Main = styled.main`\n  position: relative;\n  display: ${MainTheme.display};\n  height: 100%;\n  width: 100%;\n`\n\nconst Content = styled.div`\n  flex-grow: ${ContentTheme.flexGrow};\n  height: ${ContentTheme.height};\n  width: ${ContentTheme.width};\n`\n\nexport default observer(Layout)\n\nexport interface ILayout {\n  children: React.ReactElement\n}\n\nfunction Layout({ children }: ILayout) {\n  const { theme } = useStores()\n\n  return (\n    <ThemeProvider theme={{\n      mode: theme.layout\n    }}>\n      <Main>\n        <Navbar />\n        <Content>\n          { children }\n        </Content>\n      </Main>\n    </ThemeProvider>\n  )\n}","import { css } from 'styled-components'\n\nexport interface IAnimationFadeIn {\n  duration: number\n}\nexport function fadeIn(config: IAnimationFadeIn = {\n  duration: 300\n}) {\n  return css`\n    animation: fadeIn ${config.duration}ms;\n\n    @keyframes fadeIn {\n      from {\n        transform: translate(0, -15px);\n        opacity: 0;\n      }\n\n      to {\n        transform: translate(0, 0);\n        opacity: 1;\n      }\n    }\n  `\n}\n","import styled from 'styled-components'\nimport { fadeIn } from '../../../components/animations'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n`\n\nexport const Hint = styled.div`\n  position: absolute;\n  right: 50px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  width: 269px;\n  height: 300px;\n`\n\nexport const Title = styled.h1`\n  color: #fff;\n  font-size: 60px;\n  font-weight: bold;\n  font-family: \"Brig\";\n  text-align: right;\n\n  ${fadeIn({ duration: 2000 })}\n`\n\nexport const Message = styled.p`\n  color: #fff;\n  font-size: 36px;\n  font-weight: bold;\n  font-family: \"Baskerville\";\n`","import React, { useLayoutEffect } from 'react';\nimport {\n  observer\n} from 'mobx-react';\nimport Typed from 'typed.js'\nimport {\n  Wrapper,\n  Hint,\n  Title,\n  Message\n} from './_components';\n\nexport default observer(HomePage)\n\nfunction HomePage() {\n\n  useLayoutEffect(() => {\n    new Typed('#message', {\n      strings: [`It's Hard to Hold A Candle, in The Cold November Rain`],\n      typeSpeed: 100,\n      fadeOut: true\n    })\n  }, [])\n\n  return (\n    <Wrapper>\n      <Hint>\n        <Title>Use Yourself</Title>\n        <Message id=\"message\" />\n      </Hint>\n    </Wrapper>\n  )\n}","import React from 'react'\n\nexport default AboutPage\n\nfunction AboutPage() {\n  return (\n    <h1>About</h1>\n  )\n}","import styled from 'styled-components'\n\nexport const PostList = styled.ul`\n  height: 95%;\n  overflow: auto;\n  \n  &::-webkit-scrollbar {\n    visibility: hidden;\n  }\n`","import React from 'react'\nimport styled from 'styled-components'\nimport { lineClamp } from '../../../components/LineClamp'\n\nexport const Wrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  padding: 16px;\n  margin: 12px auto;\n  cursor: pointer;\n  background-color: rgba(255,255,255,.2);\n  transition: all 300ms;\n  transform-origin: center;\n  \n  &:hover {\n    box-shadow: 0 0 20px 1px rgba(255,255,255,.1);\n    transform: scale(1.02, 1.02);\n  }\n`\n\nexport const PostTitle = styled.h1`\n  color: #b95951;\n  font-size: 30px;\n  font-weight: bolder;\n  font-family: \"Fangzheng NShuSong\";\n  line-height: 30px;\n  text-align: center;\n\n  ${lineClamp(2)}\n`\n\nexport const PostMeta = styled.h2`\n  color: rgba(185,89,81,.8);\n  font-size: 14px;\n  font-style: italic;\n  font-family: Lora;\n  line-height: 20px;\n  text-align: center;\n  margin: 10px 0;\n`\n\nexport const PostMetaItem = styled.span`\n  margin-right: 20px;\n`\n\nexport const PostSummary = styled.p`\n  color: #555;\n  font-weight: bold;\n  font-family: \"Fangzheng NShuSong\";\n  line-height: 30px;\n`\n\ninterface IPostListItemProps {\n  children: React.ReactNode\n}\n\nexport function PostListItem({ children }: IPostListItemProps) {\n  return (\n    <Wrapper>\n      { children }\n    </Wrapper>\n  )\n}","import { css } from 'styled-components'\n\nexport function lineClamp(lines: number) {\n  return css`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: ${lines};\n    -webkit-box-orient: vertical;\n  `\n}","import React from 'react'\nimport styled from 'styled-components'\nimport ReactLoading from 'react-loading'\nimport { BlurRoot } from '../../../components/BlurRoot'\nimport { fadeIn } from '../../../components/animations'\n\nexport * from './PostList'\nexport * from './PostListItem'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n`\n\nexport const PostPortal = styled.div`\n  position: relative;\n  height: 95%;\n  width: 95%;\n  overflow: hidden;\n\n  ${BlurRoot}\n\n  ${fadeIn()}\n`\n\nexport const Loading = styled(ReactLoading)`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  opacity: .4;\n`\n\ninterface IPostPageRootProps {\n  children: React.ReactNode\n}\n\nexport function PostPageRoot({ children }: IPostPageRootProps) {\n  return (\n    <Wrapper>\n      <PostPortal>\n        { children }\n      </PostPortal>\n    </Wrapper>\n  )\n}","import React, { useEffect, useCallback } from 'react'\nimport {\n  observer\n} from 'mobx-react'\nimport dayjs from 'dayjs'\nimport {\n  useStores\n} from '../../models'\nimport {\n  PostPageRoot,\n  Loading,\n  PostList,\n  PostListItem,\n  PostTitle,\n  PostMeta,\n  PostMetaItem,\n  PostSummary\n} from './_components'\n\nexport default observer(PostsPage)\n\nfunction PostsPage() {\n  const { post } = useStores()\n\n  const fmtDate = useCallback((date: number) => dayjs(date).format('MM/DD/YYYY'), [])\n\n  useEffect(() => {\n    post.fetchPosts()\n  }, [post])\n\n  return (\n    <PostPageRoot>\n      {post.fetching && (\n        <Loading type=\"spin\" />\n      )}\n\n      {post.posts.length && (\n        <PostList>\n          {post.posts.map(item => (\n            <PostListItem key={item.title}>\n              <PostTitle>{ item.title }</PostTitle>\n              <PostMeta>\n                <PostMetaItem>author: { item.author }</PostMetaItem>\n                <PostMetaItem>last updated: { fmtDate(item.updateDate) }</PostMetaItem>\n                <PostMetaItem>created at: { fmtDate(item.createDate) }</PostMetaItem>\n              </PostMeta>\n              <PostSummary>{ item.summary }</PostSummary>\n            </PostListItem>\n          ))}\n        </PostList>\n      )}\n    </PostPageRoot>\n  )\n}","import React from 'react'\nimport {\n  Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport Layout from '../layouts'\n\nimport HomePage from '../pages/home'\nimport AboutPage from '../pages/about'\nimport PostsPage from '../pages/posts'\n\nconst history = createBrowserHistory()\n\nexport interface IRoute {\n  path: string\n  exact?: boolean\n  render(): React.ReactElement\n  meta: {\n    title: string\n    label: string\n  }\n}\n\nexport const routes: IRoute[] = [\n  {\n    path: '/',\n    exact: true,\n    render() {\n      return (<HomePage />)\n    },\n    meta: {\n      title: 'Home',\n      label: 'Home'\n    }\n  },\n  {\n    path: '/posts',\n    render() {\n      return (<PostsPage />)\n    },\n    meta: {\n      title: 'Posts',\n      label: 'Posts'\n    }\n  },\n  {\n    path: '/about',\n    render() {\n      return (<AboutPage />)\n    },\n    meta: {\n      title: 'About',\n      label: 'About'\n    }\n  },\n]\n\nexport function AppRoutes() {\n  return (\n    <Router history={history}>\n      <Layout>\n        <Switch>\n          {routes.map(item => (\n            <Route key={item.path} exact={item.exact} path={item.path}>\n              { item.render() }\n            </Route>\n          ))}\n        </Switch>\n      </Layout>\n    </Router>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'mobx-react'\nimport { AppRoutes } from './routes'\nimport { appState } from './models'\n\nfunction App() {\n  return (\n    <Provider { ...appState }>\n      <AppRoutes />\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\nimport 'normalize.css'\nimport 'reset.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}